name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: clay_studio_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          backend/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('backend/Cargo.lock') }}

    - name: Install sqlx-cli
      run: cargo install sqlx-cli --no-default-features --features native-tls,postgres

    - name: Set up database
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/clay_studio_test
      working-directory: backend
      run: |
        sqlx database create
        sqlx migrate run

    - name: Check backend compilation
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/clay_studio_test
      working-directory: backend
      run: |
        cargo check
        cargo sqlx prepare --check

    - name: Run backend tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/clay_studio_test
      working-directory: backend
      run: cargo test

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci

    - name: Check frontend types
      working-directory: frontend
      run: npm run typecheck

    - name: Build frontend
      working-directory: frontend
      run: npm run build