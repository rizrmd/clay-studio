# Simple Dockerfile for quick AMD64 builds

# Build backend
FROM rust:1.89 AS backend-builder
WORKDIR /app
COPY backend/Cargo.toml backend/Cargo.lock* ./
COPY backend/migration ./migration
COPY backend/src ./src
RUN cargo build --release

# Build frontend
FROM oven/bun:1 AS frontend-builder
WORKDIR /app
COPY frontend/package.json frontend/bun.lockb* ./
RUN bun install --frozen-lockfile || bun install
COPY frontend/ ./
RUN bun run build

# Runtime
FROM debian:trixie-slim AS runtime
WORKDIR /app

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    ca-certificates \
    libssl3 \
    libpq5 \
    curl \
    bash \
    unzip \
    sudo && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

# Create non-root user
RUN groupadd -r clayuser && \
    useradd -r -g clayuser -d /app -s /bin/bash clayuser && \
    echo "clayuser ALL=(ALL) NOPASSWD: /bin/chown, /bin/chmod" >> /etc/sudoers

# Copy artifacts
COPY --from=backend-builder /app/target/release/clay-studio-backend /app/clay-studio-backend
COPY --from=backend-builder /app/target/release/mcp_server /app/mcp_server
COPY --from=frontend-builder /app/dist /app/frontend/dist

# Create directories
RUN mkdir -p /app/.clients /app/tmp && \
    chown -R clayuser:clayuser /app && \
    chmod 755 /app/.clients /app/tmp

# Install Bun
ENV BUN_INSTALL=/app/.clients/bun
RUN curl -fsSL https://bun.sh/install | bash && \
    chown -R clayuser:clayuser /app/.clients && \
    chmod -R 755 /app/.clients

# Environment
ENV RUST_LOG=info
ENV PORT=7680
ENV STATIC_FILES_PATH=/app/frontend/dist
ENV CLIENTS_DIR=/app/.clients
ENV HOME=/app

# Entrypoint
RUN echo '#!/bin/bash\n\
if [ -d "/app/.clients" ]; then\n\
    sudo chown -R clayuser:clayuser /app/.clients 2>/dev/null || true\n\
    sudo chmod -R 755 /app/.clients 2>/dev/null || true\n\
fi\n\
exec "$@"' > /entrypoint.sh && chmod +x /entrypoint.sh

USER clayuser
VOLUME ["/app/.clients"]
EXPOSE 7680

ENTRYPOINT ["/entrypoint.sh"]
CMD ["/app/clay-studio-backend"]